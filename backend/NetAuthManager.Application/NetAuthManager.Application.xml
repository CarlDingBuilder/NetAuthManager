<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetAuthManager.Application</name>
    </assembly>
    <members>
        <member name="T:NetAuthManager.Application.Base.Consts.ConstIdentityPrefixes">
            <summary>
            增长前缀
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Base.Consts.ConstIdentityPrefixes.TransferRuleGroup">
            <summary>
            流转规则组别
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Base.Consts.ConstIdentityPrefixes.TransferRule">
            <summary>
            流转规则
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Base.Consts.ConstIdentityPrefixes.TransferRuleNode">
            <summary>
            流转规则节点
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Base.Consts.ConstIdentityPrefixes.ConditionRule">
            <summary>
            条件规则
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Base.Consts.ConstIdentityPrefixes.ExtractRule">
            <summary>
            提取规则
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Base.Consts.ConstIdentityPrefixes.RoleGroup">
            <summary>
            角色组
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Base.Consts.ConstIdentityPrefixes.ServiceEntity">
            <summary>
            服务实体
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Base.Exceptions.TooManyRequestsException">
            <summary>
            过多请求错误
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Base.Results.GetValidateCodeResult.Base64String">
            <summary>
            验证码图片Base64
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Base.Results.GetValidateCodeResult.Keystore">
            <summary>
            存储验证码的KEy
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Base.Stores.IMemoryCacheStore.GetAsync``1(System.String)">
            <summary>
            异步获取
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Base.Stores.IMemoryCacheStore.Get``1(System.String)">
            <summary>
            获取
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Base.Stores.IMemoryCacheStore.SetAsync``1(System.String,``0)">
            <summary>
            异步设置
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Base.Stores.IMemoryCacheStore.Set``1(System.String,``0)">
            <summary>
            设置
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Base.Stores.MemoryCacheStore">
            <summary>
            内存缓存存储
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Base.Stores.MemoryCacheStore.CachePrefix">
            <summary>
            通用存储头部
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Base.Stores.MemoryCacheStore.GetAsync``1(System.String)">
            <summary>
            异步获取
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Base.Stores.MemoryCacheStore.Get``1(System.String)">
            <summary>
            获取
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Consts.ConstNames">
            <summary>
            名称常量
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Consts.ConstNames.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstNames.RoleName.Administrators">
            <summary>
            Administrators
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstNames.RoleName.Everyone">
            <summary>
            Everyone
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Consts.ConstNames.RoleCode">
            <summary>
            角色编码
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstNames.RoleCode.Administrators">
            <summary>
            Administrators
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstNames.RoleCode.Everyone">
            <summary>
            Everyone
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Consts.ConstNames.ResourcePermTypeName">
            <summary>
            资源权限类型
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstNames.ResourcePermTypeName.Module">
            <summary>
            操作
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstNames.ResourcePermTypeName.Record">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Consts.ConstNames.ResourcePermTypeValue">
            <summary>
            资源权限类型值
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstNames.ResourcePermTypeValue.System">
            <summary>
            系统
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstNames.ResourcePermTypeValue.Module">
            <summary>
            操作
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstNames.ResourcePermTypeValue.Record">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Consts.ConstRSIDs">
            <summary>
            RSID 配置
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Consts.ConstRSIDs.Base">
            <summary>
            基础模块
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstRSIDs.Base.MenuRoot">
            <summary>
            菜单根
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstRSIDs.Base.ResourceRoot">
            <summary>
            资源根
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Consts.ConstRSIDs.RoleSID">
            <summary>
            角色 SID
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstRSIDs.RoleSID.Administrators">
            <summary>
            Administrators
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.ConstRSIDs.RoleSID.Everyone">
            <summary>
            Everyone
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.DeleteSuccess">
            <summary>
            数据删除成功
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.DeleteFailure">
            <summary>
            数据删除失败
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.DeleteProhibitDelete">
            <summary>
            系统禁止删除此数据
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.DeleteIsHaveChildren">
            <summary>
            此数据含有子类信息，禁止删除
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.DataHandleEx">
            <summary>
            数据处理异常
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.CreateSuccess">
            <summary>
            数据添加成功
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.CreateFailure">
            <summary>
            数据添加失败
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.MoveSuccess">
            <summary>
            数据移动成功
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.MoveFailure">
            <summary>
            数据移动失败
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.CreateProhibitCreate">
            <summary>
            系统禁止添加数据
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.EditSuccess">
            <summary>
            数据编辑成功
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.EditFailure">
            <summary>
            数据编辑失败
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.EditProhibitEdit">
            <summary>
            系统禁止编辑此数据
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.DataIsHave">
            <summary>
            数据已存在
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.DataisNo">
            <summary>
            数据不存在
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.DataParameterError">
            <summary>
            请提交必要的参数
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.InsertSuccess">
            <summary>
            数据插入成功
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.InsertFailure">
            <summary>
            数据插入失败
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.ExcelExportFailure">
            <summary>
            Excel导出失败
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.ExcelExportSuccess">
            <summary>
            Excel导出成功
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.GetDataSuccess">
            <summary>
            获取数据成功
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.GetDataException">
            <summary>
            获取数据异常
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.GetDataFailure">
            <summary>
            获取数据失败
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.SetDataSuccess">
            <summary>
            设置数据成功
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.SetDataException">
            <summary>
            设置数据异常
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Consts.GlobalConstVars.SetDataFailure">
            <summary>
            设置数据失败
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Filters.BaseExceptionFilter.OnExceptionAsync(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            异常拦截器
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.Handlers.Models.PermAuthItem">
            <summary>
            权限授权项
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Handlers.Models.PermAuthItem.PermFullPath">
            <summary>
            权限资源全路径
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Handlers.Models.PermAuthItem.PermName">
            <summary>
            权限名称
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Handlers.PermAuthorizeAttribute">
            <summary>
            权限授权属性
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Handlers.PermAuthorizeAttribute.PermsAuthItems">
            <summary>
            权限授权项
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Handlers.PermAuthorizeAttribute.PermFullPath">
            <summary>
            权限全路径
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Handlers.PermAuthorizeAttribute.#ctor(System.String,NetAuthManager.Core.Common.Enums.PermTypeEnum,System.String)">
            <summary>
            单权限授权属性定义
            </summary>
            <param name="PermFullPath">权限资源全路径</param>
            <param name="Perm">权限枚举，默认值访问</param>
            <param name="PermName">权限名称，存在权限名称时，取权限名称，否则取权限枚举</param>
        </member>
        <member name="M:NetAuthManager.Application.Handlers.PermAuthorizeAttribute.#ctor(System.String)">
            <summary>
            多权限授权属性定义
            只要有一个权限项有权限则有权限
            </summary>
            <param name="Perms">权限项</param>
        </member>
        <member name="M:NetAuthManager.Application.Handlers.PermAuthorizeAttribute.#ctor(System.Collections.Generic.List{NetAuthManager.Application.Handlers.Models.PermAuthItem})">
            <summary>
            多权限授权属性定义
            只要有一个权限项有权限则有权限
            </summary>
            <param name="Perms">权限项</param>
        </member>
        <member name="T:NetAuthManager.Application.Handlers.RateLimitAttribute">
            <summary>
            限流属性
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Handlers.RateLimitAttribute.RequestsPerMinute">
            <summary>
            每分钟限制次数
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRSAService.GetPublicKey">
            <summary>
            获取公钥，并返回存储私钥的KEY
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRSAService.Decrypt(System.String,System.String)">
            <summary>
            解密
            </summary>
            <param name="encryptedData"></param>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IValidateCodeService.GetValidateCode">
            <summary>
            获取验证码
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.Middlewares.PermAuthorizeMiddleware">
            <summary>
            授权中间件
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Middlewares.PermAuthorizeMiddlewareExtensions">
            <summary>
            权限中间件扩展
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Middlewares.PermAuthorizeMiddlewareExtensions.UsePermAuthorize(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            使用权限中间件
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.Middlewares.RateLimitingMiddleware">
            <summary>
            限流中间件
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Middlewares.RateLimitingMiddlewareExtensions">
            <summary>
            限流中间件扩展
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Middlewares.RateLimitingMiddlewareExtensions.UseRateLimitAuthorize(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            使用限流中间件
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.Results.BaseResult`1">
            <summary>
            基础结果
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Results.BaseResult`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Results.BaseResult">
            <summary>
            基础结果
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Results.BaseResult.Success">
            <summary>
            是否执行成功
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Results.BaseResult.Code">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Results.BaseResult.Msg">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Results.BaseResult.Errors">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Results.BaseResult.Extras">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Results.BaseResult.Timestamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Results.Provider.BaseResultProvider">
            <summary>
            返回结果支持
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Results.Provider.BaseResultProvider.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Furion.FriendlyException.ExceptionMetadata)">
            <summary>
            异常返回值
            </summary>
            <param name="context"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Results.Provider.BaseResultProvider.OnAuthorizeException(Microsoft.AspNetCore.Http.DefaultHttpContext,Furion.FriendlyException.ExceptionMetadata)">
            <summary>
            异常返回值
            </summary>
            <param name="context"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Results.Provider.BaseResultProvider.OnSucceeded(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,System.Object)">
            <summary>
            成功返回值
            </summary>
            <param name="context"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Results.Provider.BaseResultProvider.OnValidateFailed(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Furion.DataValidation.ValidationMetadata)">
            <summary>
            验证失败返回值
            </summary>
            <param name="context"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Results.Provider.BaseResultProvider.OnResponseStatusCodes(Microsoft.AspNetCore.Http.HttpContext,System.Int32,Furion.UnifyResult.UnifyResultSettingsOptions)">
            <summary>
            特定状态码返回值
            </summary>
            <param name="context"></param>
            <param name="statusCode"></param>
            <param name="unifyResultSettings"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Results.Provider.BaseResultProvider.BaseResult(System.Int32,System.Boolean,System.Object,System.Object,System.String)">
            <summary>
            返回 RESTful 风格结果集
            </summary>
            <param name="statusCode"></param>
            <param name="succeeded"></param>
            <param name="data"></param>
            <param name="errors"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.Services.BaseInfoService`1">
            <summary>
            基础服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Services.BaseInfoService`1.InsertOrUpdate(`0)">
            <summary>
            保存实体
            </summary>
            <param name="entity">当前实体</param>
        </member>
        <member name="M:NetAuthManager.Application.Services.BaseInfoService`1.InsertOrUpdateAsync(`0)">
            <summary>
            保存实体
            </summary>
            <param name="entity">当前实体</param>
        </member>
        <member name="M:NetAuthManager.Application.Services.BaseInfoService`1.InsertOrUpdate(`0,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            保存实体
            </summary>
            <param name="entity">当前实体</param>
            <param name="keyExpression">主键表达式：x => x.Code == entity.Code</param>
        </member>
        <member name="M:NetAuthManager.Application.Services.BaseInfoService`1.InsertOrUpdateAsync(`0,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            保存实体
            </summary>
            <param name="entity">当前实体</param>
            <param name="keyExpression">主键表达式：x => x.Code == entity.Code</param>
        </member>
        <member name="T:NetAuthManager.Application.Services.StringService">
            <summary>
            字符串帮助类
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Services.StringService.GetUserShortName(System.String,System.String)">
            <summary>
            用户短名称
            </summary>
            <param name="account"></param>
            <param name="displayName"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Services.StringService.GetProcessDefaultShortName(System.String)">
            <summary>
            流程短名称
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.MemoryCacheService">
            <summary>
            内存存储服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MemoryCacheService.Add``1(System.String,``0)">
            <summary>
            设置值对象
            </summary>
            <typeparam name="V"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:NetAuthManager.Application.MemoryCacheService.Add``1(System.String,``0,System.Int32)">
            <summary>
            设置值对象
            </summary>
            <typeparam name="V"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <param name="cacheDurationInSeconds">缓存持续秒数</param>
        </member>
        <member name="M:NetAuthManager.Application.MemoryCacheService.Get``1(System.String)">
            <summary>
            获取值对象
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MemoryCacheService.ContainsKey``1(System.String)">
            <summary>
            是否包含值
            </summary>
            <typeparam name="V"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MemoryCacheService.GetOrCreate``1(System.String,System.Func{``0},System.Int32)">
            <summary>
            获取或创建
            </summary>
            <typeparam name="V"></typeparam>
            <param name="cacheKey"></param>
            <param name="create"></param>
            <param name="cacheDurationInSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MemoryCacheService.Remove``1(System.String)">
            <summary>
            移除键值
            </summary>
            <typeparam name="V"></typeparam>
            <param name="key"></param>
        </member>
        <member name="T:NetAuthManager.Application.RSAService">
            <summary>
            RSA服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RSAService.GetPublicKey">
            <summary>
            获取公钥，并返回存储私钥的KEY
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RSAService.Decrypt(System.String,System.String)">
            <summary>
            解密
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ValidateCodeService.GetValidateCode">
            <summary>
            获取验证码
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.Stores.IRateLimitCounterStore">
            <summary>
            限流记数Store
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Stores.IRateLimitCounterStore.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            获取限流缓存数据
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Stores.IRateLimitCounterStore.IncrementAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            递增
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Stores.MemoryCacheRateLimitCounterStore">
            <summary>
            内存限制
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Stores.MemoryCacheRateLimitCounterStore.CachePrefix">
            <summary>
            限流头部
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Stores.MemoryCacheRateLimitCounterStore.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            获取限流缓存数据
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Stores.MemoryCacheRateLimitCounterStore.IncrementAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            递增
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Stores.RateLimitCounter">
            <summary>
            限流总数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Common.Helpers.EncryptHelper">
            <summary>
            字符串加密解密方法扩展类。
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.Common.Helpers.EncryptHelper.DESENCRYPT_KEY">
            <summary>
            默认密钥。
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Common.Helpers.EncryptHelper.DESEncrypt(System.String,System.String)">
            <summary>
            DES加密，使用自定义密钥。
            </summary>
            <param name="text">待加密的明文</param>
            <param name="key">8位字符的密钥字符串</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Common.Helpers.EncryptHelper.DESDecrypt(System.String,System.String)">
            <summary>
            DES解密，使用自定义密钥。
            </summary>
            <param name="cyphertext">待解密的秘文</param>
            <param name="key">必须是8位字符的密钥字符串(不能有特殊字符)</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Common.Helpers.EncryptHelper.DESEncrypt(System.String)">
            <summary>
            DES加密，使用默认密钥。
            </summary>
            <param name="text">待加密的明文</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Common.Helpers.EncryptHelper.DESDecrypt(System.String)">
            <summary>
            DES解密，使用默认密钥。
            </summary>
            <param name="cyphertext">待解密的秘文</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Common.Helpers.EncryptHelper.Base64Encrypt(System.String,System.Text.Encoding)">
            <summary>
            Base64加密，采用指定字符编码方式加密。
            </summary>
            <param name="input">待加密的明文</param>
            <param name="encode">字符编码</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Common.Helpers.EncryptHelper.Base64Encrypt(System.String)">
            <summary>
            Base64加密，采用UTF8编码方式加密。
            </summary>
            <param name="input">待加密的明文</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Common.Helpers.EncryptHelper.Base64Decrypt(System.String)">
            <summary>
            Base64解密，采用UTF8编码方式解密。
            </summary>
            <param name="input">待解密的秘文</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Common.Helpers.EncryptHelper.Base64Decrypt(System.String,System.Text.Encoding)">
            <summary>
            Base64解密，采用指定字符编码方式解密。
            </summary>
            <param name="input">待解密的秘文</param>
            <param name="encode">字符的编码</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Common.Helpers.EncryptHelper.MD5Encrypt(System.String)">
            <summary>
            字符串MD5加密。
            </summary>
            <param name="strOri">需要加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.Common.Helpers.EncryptHelper.MD5Encrypt(System.IO.Stream)">
            <summary>
            文件流MD5加密。
            </summary>
            <param name="stream">需要加密的文件流</param>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Enums.SourceCodeEnum">
            <summary>
            来源代码
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Mappers.RouterMapper">
            <summary>
            路由构建 Mapper
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Sys.Mappers.RouterMapper.BuildRouter(System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu})">
            <summary>
            路由构建
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Sys.Mappers.RouterMapper.BuildRouter(NetAuthManager.Core.Entities.SysMenu)">
            <summary>
            路由构建
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.CompanySyncParam">
            <summary>
            公司参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.CompanySyncParam.CompanyCode">
            <summary>
            公司编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.CompanySyncParam.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.CompanySyncParam.CompanyShortName">
            <summary>
            公司简称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.CompanySyncParam.CityName">
            <summary>
            城市名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.CompanySyncParam.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.CompanySyncParam.SourceSystem">
            <summary>
            来源系统
            </summary>
            <example>FSSC</example>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.CompanySyncParam.IsOpen">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam">
            <summary>
            字典项基本参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam.Id">
            <summary>
            字典项ID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam.TypeId">
            <summary>
            字典ID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam.ItemCode">
            <summary>
            字典项编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam.ItemName">
            <summary>
            字典项名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam.Ext01">
            <summary>
            扩展字段01
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam.Ext02">
            <summary>
            扩展字段02
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam.Ext03">
            <summary>
            扩展字段03
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam.Ext04">
            <summary>
            扩展字段04
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam.Ext05">
            <summary>
            扩展字段05
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam.OrderIndex">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam.IsOpen">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemAddParam">
            <summary>
            字典项添加参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemModifyParam">
            <summary>
            字典项修改参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Dictionarys.SetDictionaryItemIsOpenParam">
            <summary>
            字典项启用参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemDeletesParam">
            <summary>
            字典项删除参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemDeletesParam.Ids">
            <summary>
            字典项Id
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemOrderParam">
            <summary>
            字典项排序
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam">
            <summary>
            字典基本参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam.Id">
            <summary>
            字典ID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam.TypeCode">
            <summary>
            业务编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam.TypeName">
            <summary>
            业务名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam.ExtName01">
            <summary>
            扩展字段名称01
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam.ExtName02">
            <summary>
            扩展字段名称02
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam.ExtName03">
            <summary>
            扩展字段名称03
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam.ExtName04">
            <summary>
            扩展字段名称04
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam.ExtName05">
            <summary>
            扩展字段名称05
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam.OrderIndex">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam.IsOpen">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeAddParam">
            <summary>
            字典添加参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeModifyParam">
            <summary>
            字典修改参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Dictionarys.SetDictionaryTypeIsOpenParam">
            <summary>
            字典启用参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeDeletesParam">
            <summary>
            字典删除参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeDeletesParam.Ids">
            <summary>
            字典Id
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Forms.SyncFormParam">
            <summary>
            表单同步参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Forms.SyncFormParam.FormCode">
            <summary>
            工单编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Forms.SyncFormParam.FormName">
            <summary>
            工单名称
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Menus.DeleteMenuParam">
            <summary>
            删除菜单
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Menus.DeleteMenuTypeParam">
            <summary>
            删除菜单类型
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RejectReasons.RejectReasonBaseParam">
            <summary>
            退回原因基本参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RejectReasons.RejectReasonBaseParam.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RejectReasons.RejectReasonBaseParam.OptTypeCode">
            <summary>
            退回操作类型编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RejectReasons.RejectReasonBaseParam.RejectReason">
            <summary>
            退回原因
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RejectReasons.RejectReasonBaseParam.IsRelatePerformance">
            <summary>
            是否关联绩效
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RejectReasons.RejectReasonBaseParam.EntityCode">
            <summary>
            服务实体编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RejectReasons.RejectReasonBaseParam.FormCode">
            <summary>
            工单编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RejectReasons.RejectReasonBaseParam.IsOpen">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RejectReasons.RejectReasonAddParam">
            <summary>
            添加参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RejectReasons.RejectReasonModifyParam">
            <summary>
            修改参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RejectReasons.SetRejectReasonIsOpenParam">
            <summary>
            启用参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RejectReasons.RejectReasonDeletesParam">
            <summary>
            删除参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RejectReasons.RejectReasonDeletesParam.Ids">
            <summary>
            IDS
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Resources.GetResourcesParam">
            <summary>
            获取资源参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Resources.ResourceBaseParam">
            <summary>
            获取资源结构参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourceBaseParam.SID">
            <summary>
            资源 SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourceBaseParam.SIDType">
            <summary>
            资源 SID 类型
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsGetParam">
            <summary>
            获取资源权限参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsGetParam.RoleSID">
            <summary>
            角色SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsGetParam.RoleSIDType">
            <summary>
            角色类型
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam">
            <summary>
            资源权限保存参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam.SID">
            <summary>
            资源ID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam.SIDType">
            <summary>
            资源类型
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam.Acls">
            <summary>
            权限项
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam_Item">
            <summary>
            权限项
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam_Item.SID">
            <summary>
            资源角色SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam_Item.SIDType">
            <summary>
            资源角色类型
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam_Item.DisplayName">
            <summary>
            资源角色名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam_Item.Inherited">
            <summary>
            是否继承的
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam_Item.AllowPermision">
            <summary>
            允许的权限
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam_Item.DenyPermision">
            <summary>
            禁止的权限
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Resources.ResourcePermCheckParam">
            <summary>
            资源权限检测参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermCheckParam.SID">
            <summary>
            资源 SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermCheckParam.Account">
            <summary>
            账号，当不提供时，默认为当前登录用户
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Resources.ResourcePermCheckPermParam">
            <summary>
            资源权限检测参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermCheckPermParam.PermName">
            <summary>
            操作名称
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Resources.ResourcePermCheckPermsParam">
            <summary>
            资源权限检测参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermCheckPermsParam.PermNames">
            <summary>
            操作名称
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Resources.ResourcePermRoleAddParam">
            <summary>
            添加资源角色参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermRoleAddParam.RoleSID">
            <summary>
            角色SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermRoleAddParam.RoleSIDType">
            <summary>
            角色类型
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Resources.ResourcePermRoleDeleteParam">
            <summary>
            添加资源角色参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermRoleDeleteParam.RoleSID">
            <summary>
            角色SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermRoleDeleteParam.RoleSIDType">
            <summary>
            角色类型
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Resources.ResourcePermSaveParam">
            <summary>
            资源权限项保存参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermSaveParam.SID">
            <summary>
            SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermSaveParam.Perms">
            <summary>
            权限项
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Resources.ResourcePermSaveParam_Item">
            <summary>
            权限项
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermSaveParam_Item.SID">
            <summary>
            资源ID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermSaveParam_Item.PermName">
            <summary>
            权限名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermSaveParam_Item.PermDisplayName">
            <summary>
            权限名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermSaveParam_Item.PermType">
            <summary>
            权限类型：模块、记录
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Resources.ResourcePermSaveParam_Item.OrderIndex">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupCheckParam">
            <summary>
            角色检查参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupCheckParam.RoleCode">
            <summary>
            角色编码
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupCheckIsMemberParam">
            <summary>
            角色检查参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupCheckIsMemberParam.RoleCode">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberAddParam">
            <summary>
            角色成员添加参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberAddParam.Member">
            <summary>
            角色成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMembersAddParam">
            <summary>
            角色成员添加参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMembersAddParam.Members">
            <summary>
            角色成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberDeleteParam">
            <summary>
            角色成员删除参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberDeleteParam.Member">
            <summary>
            角色成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberDeletesParam">
            <summary>
            角色成员删除多个参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberDeletesParam.Members">
            <summary>
            角色成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.SaveRoleGroupMembersParam">
            <summary>
            保存角色组成员
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.SaveRoleGroupMembersParam.Members">
            <summary>
            角色成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam">
            <summary>
            角色基本参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam.GroupCode">
            <summary>
            角色编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam.GroupName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam.ServiceEntityCode">
            <summary>
            服务实体
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam.IsOpen">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam.OrderIndex">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupAddParam">
            <summary>
            角色添加参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupModifyParam">
            <summary>
            角色重命名参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.SetRoleGroupIsOpenParam">
            <summary>
            角色启用参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupDeletesParam">
            <summary>
            角色删除参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupDeletesParam.GroupCodes">
            <summary>
            角色编码
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMember">
            <summary>
            角色成员
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMember.DisplayName">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMember.SID">
            <summary>
            成员 SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMember.SIDType">
            <summary>
            成员类型：UserSID、OUSID、RoleSID、LeaderTitleSID
            GroupSID、CustomCode
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.RoleCheckParam">
            <summary>
            角色检查参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleCheckParam.Account">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.RoleCheckIsMemberParam">
            <summary>
            角色检查参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleCheckIsMemberParam.Account">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.RoleMemberAddParam">
            <summary>
            角色成员添加参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleMemberAddParam.Member">
            <summary>
            角色成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.RoleMembersAddParam">
            <summary>
            角色成员添加参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleMembersAddParam.Members">
            <summary>
            角色成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.RoleMemberDeleteParam">
            <summary>
            角色成员删除参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleMemberDeleteParam.Member">
            <summary>
            角色成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.RoleMemberDeletesParam">
            <summary>
            角色成员删除多个参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleMemberDeletesParam.Members">
            <summary>
            角色成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.SaveRoleMembersParam">
            <summary>
            保存角色成员
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.SaveRoleMembersParam.Members">
            <summary>
            角色成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam">
            <summary>
            角色基本参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam.RoleCode">
            <summary>
            角色编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam.IsOpen">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam.OrderIndex">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.RoleAddParam">
            <summary>
            角色添加参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.RoleModifyParam">
            <summary>
            角色重命名参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.SetIsOpenParam">
            <summary>
            角色启用参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.RoleDeletesParam">
            <summary>
            角色删除参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleDeletesParam.RoleCodes">
            <summary>
            角色编码
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Roles.RoleMember">
            <summary>
            角色成员
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleMember.DisplayName">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleMember.SID">
            <summary>
            成员 SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Roles.RoleMember.SIDType">
            <summary>
            成员类型：UserSID、OUSID、RoleSID、LeaderTitleSID
            GroupSID、CustomCode
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.ServiceEntityBaseParam">
            <summary>
            服务实体基本参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.ServiceEntityBaseParam.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.ServiceEntityBaseParam.EntityCode">
            <summary>
            服务实体编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.ServiceEntityBaseParam.EntityName">
            <summary>
            服务实体名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.ServiceEntityBaseParam.SourceCode">
            <summary>
            来源编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.ServiceEntityBaseParam.Domain">
            <summary>
            系统域名前缀
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.ServiceEntityBaseParam.IsRelatePerformance">
            <summary>
            是否关联绩效
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.ServiceEntityBaseParam.OrderIndex">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.ServiceEntityBaseParam.IsOpen">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.ServiceEntityBaseParam.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.ServiceEntityAddParam">
            <summary>
            添加参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.ServiceEntityModifyParam">
            <summary>
            修改参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.SetServiceEntityIsOpenParam">
            <summary>
            启用参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.ServiceEntityDeletesParam">
            <summary>
            删除参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.ServiceEntityDeletesParam.EntityCodes">
            <summary>
            实体编码
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Staffs.StaffDispatchBaseParam">
            <summary>
            员工派单基本参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Staffs.StaffDispatchBaseParam.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Staffs.StaffDispatchBaseParam.HRID">
            <summary>
            HRID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Staffs.StaffDispatchBaseParam.Name">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Staffs.StaffDispatchBaseParam.StopStartTime">
            <summary>
            停止派单时间从
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Staffs.StaffDispatchBaseParam.StopEndTime">
            <summary>
            停止派单时间至
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Staffs.StaffDispatchBaseParam.IsOpen">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Staffs.StaffDispatchBaseParam.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Staffs.StaffDispatchAddParam">
            <summary>
            员工派单添加参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Staffs.StaffDispatchModifyParam">
            <summary>
            员工派单修改参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Staffs.SetStaffDispatchIsOpenParam">
            <summary>
            员工派单启用参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Users.LoginInfoParam">
            <summary>
            登录信息
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Users.LoginInfoParam.VerificationCode">
            <summary>
            图片验证码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Users.LoginInfoParam.Keystore">
            <summary>
            存储私钥的key，用于解密 Password，解密后为 LoginInfoParam 对象
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Users.LoginInfoParam.VerifyCodeKeystore">
            <summary>
            存储验证码的key，用来解密验证码
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Users.GetTokenParam">
            <summary>
            获取Token参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Users.GetTokenParam.UserName">
            <summary>
            用户账号
            </summary>
            <example>sa</example>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Users.GetTokenParam.Password">
            <summary>
            密码
            </summary>
            <example>12345678</example>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Users.UserBaseParam">
            <summary>
            用户基本参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Users.UserBaseParam.Account">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Users.UserBaseParam.HRID">
            <summary>
            HRID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Users.UserBaseParam.Name">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Users.UserBaseParam.IsOpen">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Users.UserBaseParam.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Users.UserAddParam">
            <summary>
            用户添加参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Users.UserModifyParam">
            <summary>
            用户修改参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Users.UserModifyPasswordParam">
            <summary>
            用户修改密码参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Users.SetUserIsOpenParam">
            <summary>
            用户启用参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Users.UserDeletesParam">
            <summary>
            用户删除参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Users.UserDeletesParam.Accounts">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.Users.SaveUserRolesParam">
            <summary>
            保存角色成员
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.Users.SaveUserRolesParam.RoleCodes">
            <summary>
            角色编码
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Params.UserSyncParam">
            <summary>
            用户同步参数
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.UserSyncParam.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.UserSyncParam.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.UserSyncParam.HRID">
            <summary>
            员工工号
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.UserSyncParam.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.UserSyncParam.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.UserSyncParam.Mobile">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.UserSyncParam.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.UserSyncParam.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.UserSyncParam.SourceSystem">
            <summary>
            来源系统
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Params.UserSyncParam.IsOpen">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.DataSync.SyncResult`1">
            <summary>
            同步结果
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.DataSync.SyncResult">
            <summary>
            同步结果
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Resources.ResourceItemDto">
            <summary>
            资源项模型
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourceItemDto.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourceItemDto.Label">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourceItemDto.SID">
            <summary>
            SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourceItemDto.SIDType">
            <summary>
            SID类型
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourceItemDto.IsRoot">
            <summary>
            是否是根节点
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Sys.Results.Resources.ResourceItemDto.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Sys.Results.Resources.ResourceItemDto.#ctor(NetAuthManager.Core.Entities.SysMenu)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Sys.Results.Resources.ResourceItemDto.#ctor(NetAuthManager.Core.Entities.SysResourcePerm)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Resources.ResourceItemBoxDto">
            <summary>
            资源项包裹
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourceItemBoxDto.Items">
            <summary>
            项目：菜单资源对应着全路径项集合
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourceItemBoxDto.Perms">
            <summary>
            当前权限列表
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourceItemBoxDto.MaxRolesCount">
            <summary>
            最大角色数量
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Resources.ResourcePermAclsDto">
            <summary>
            资源操作权限
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermAclsDto.PermName">
            <summary>
            权限名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermAclsDto.PermDisplayName">
            <summary>
            权限名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermAclsDto.PermType">
            <summary>
            权限类型：模块、记录
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermAclsDto.AllowPermision">
            <summary>
            允许权限
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermAclsDto.IsAllowInherited">
            <summary>
            允许权限是否是继承来的
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermAclsDto.DenyPermision">
            <summary>
            禁止权限
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermAclsDto.IsDenyInherited">
            <summary>
            禁止权限是否是继承来的
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Resources.ResourcePermCheckDto">
            <summary>
            资源操作权限类型
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermCheckDto.HavePerm">
            <summary>
            有权限
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Resources.ResourcePermChecksDto">
            <summary>
            判断资源操作权限
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermChecksDto.Perms">
            <summary>
            权限列表
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemDto">
            <summary>
            资源操作方式
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemDto.SID">
            <summary>
            资源ID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemDto.PermName">
            <summary>
            权限名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemDto.PermDisplayName">
            <summary>
            权限名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemDto.PermType">
            <summary>
            权限类型：模块、记录
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemDto.Roles">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemDto.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemDto.#ctor(NetAuthManager.Core.Entities.SysResourcePerm)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemDto.CopyFrom(NetAuthManager.Core.Entities.SysResourcePerm)">
            <summary>
            格式化到子对象
            </summary>
            <param name="resourcePerm">资源功能</param>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemBoxDto">
            <summary>
            资源操作方式包装
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemBoxDto.Resource">
            <summary>
            资源信息
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemBoxDto.Perms">
            <summary>
            资源操作方式
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemBoxDto.PermTypes">
            <summary>
            资源操作权限类型
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermItemBoxDto.PermLogs">
            <summary>
            资源操作权限记录
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Resources.ResourcePermRecordDto">
            <summary>
            资源操作权限历史记录
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermRecordDto.PermName">
            <summary>
            权限名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermRecordDto.PermDisplayName">
            <summary>
            显示名
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Resources.ResourcePermRoleItemDto_RoleItem">
            <summary>
            有权限的角色对象，这里的角色是角色、部门、人员的通称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermRoleItemDto_RoleItem.Name">
            <summary>
            角色名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermRoleItemDto_RoleItem.SID">
            <summary>
            角色SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermRoleItemDto_RoleItem.SIDType">
            <summary>
            角色类型：角色、角色组、用户
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermRoleItemDto_RoleItem.Inherited">
            <summary>
            是否继承来的角色
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Resources.ResourcePermRolesBoxResult">
            <summary>
            资源操作方式包装
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermRolesBoxResult.Resource">
            <summary>
            资源信息
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermRolesBoxResult.Roles">
            <summary>
            角色对象
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Resources.ResourcePermTypeDto">
            <summary>
            资源操作权限类型
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermTypeDto.Label">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResourcePermTypeDto.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Resources.ResurceNodeItem">
            <summary>
            资源节点数据
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Resources.ResurceNodeItem.Children">
            <summary>
            子菜单
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Sys.Results.Resources.ResurceNodeItem.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Sys.Results.Resources.ResurceNodeItem.#ctor(NetAuthManager.Core.Entities.SysMenu)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.Sys.Results.Resources.ResurceNodeItem.#ctor(NetAuthManager.Core.Entities.SysResourcePerm)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.RoleGroups.BelongRoleGroupsResult">
            <summary>
            所属角色返回
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.RoleGroups.IsBelongRoleGroupResult">
            <summary>
            是否属于角色返回
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.RoleGroups.IsBelongRoleGroupResult.IsBelong">
            <summary>
            是否属于
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.RoleGroups.RoleGroupMemberResult">
            <summary>
            角色成员 DTO
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.RoleGroups.RoleGroupMemberResult.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.RoleGroups.RoleGroupMemberResult.SID">
            <summary>
            成员 SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.RoleGroups.RoleGroupMemberResult.SIDType">
            <summary>
            成员类型
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.RoleGroups.RoleGroupRoleItem">
            <summary>
            角色成员 DTO
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.RoleGroups.RoleGroupRoleItem.RoleCode">
            <summary>
            角色编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.RoleGroups.RoleGroupRoleItem.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Roles.BelongRolesResult">
            <summary>
            所属角色返回
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Roles.IsBelongRoleResult">
            <summary>
            是否属于角色返回
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Roles.IsBelongRoleResult.IsBelong">
            <summary>
            是否属于
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Roles.RoleMemberResult">
            <summary>
            角色成员 DTO
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Roles.RoleMemberResult.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Roles.RoleMemberResult.SID">
            <summary>
            成员 SID
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Roles.RoleMemberResult.SIDType">
            <summary>
            成员类型
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Users.LoginUserBoxDto">
            <summary>
            登录用户信息
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Users.LoginUserBoxDto.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Users.LoginUserBoxDto.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Users.LoginUserInfoDto">
            <summary>
            登录用户信息
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Users.LoginUserInfoDto.Avatar">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Users.LoginUserInfoDto.UserAccount">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Users.LoginUserInfoDto.UserName">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Users.LoginUserInfoDto.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Users.LoginUserInfoDto.HRID">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Sys.Results.Users.UserRoleItem">
            <summary>
            用户角色项
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Users.UserRoleItem.RoleCode">
            <summary>
            角色编码
            </summary>
        </member>
        <member name="P:NetAuthManager.Application.Sys.Results.Users.UserRoleItem.DisplayName">
            <summary>
            显示名
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.IDictionaryItemService">
            <summary>
            字典项服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryItemService.GetPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取字典项分页列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryItemService.Add(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemAddParam)">
            <summary>
            添加
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryItemService.Modify(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemModifyParam)">
            <summary>
            修改
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryItemService.Delete(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam)">
            <summary>
            删除
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryItemService.Deletes(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemDeletesParam)">
            <summary>
            删除多个字典项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryItemService.SetIsOpen(NetAuthManager.Application.Sys.Params.Dictionarys.SetDictionaryItemIsOpenParam)">
            <summary>
            设置用户是否启用
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryItemService.Order(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemOrderParam)">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.IDictionaryService">
            <summary>
            字典服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryService.GetList(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获取字典项列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryService.GetItem(System.String,System.String)">
            <summary>
            获取字典项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryService.Join(System.String)">
            <summary>
            字典关联
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryService.Join(System.String,System.String)">
            <summary>
            字典关联
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.IDictionaryTypeService">
            <summary>
            字典服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryTypeService.GetPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取字典分页列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryTypeService.Add(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeAddParam)">
            <summary>
            添加
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryTypeService.Modify(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeModifyParam)">
            <summary>
            修改
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryTypeService.Delete(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam)">
            <summary>
            删除
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryTypeService.Deletes(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeDeletesParam)">
            <summary>
            删除多个字典项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IDictionaryTypeService.SetIsOpen(NetAuthManager.Application.Sys.Params.Dictionarys.SetDictionaryTypeIsOpenParam)">
            <summary>
            设置用户是否启用
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.GetFullPath(System.String)">
            <summary>
            获得业务类型全路径
            不包含根目录，即，不包含 BizMoudleRootRsid 对应的节点
            </summary>
            <param name="rsid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.GetRSID(System.String)">
            <summary>
            从全路径转为 RSID
            </summary>
            <param name="fullPath">资源全路径</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.GetResourcePerms(System.String)">
            <summary>
            获取资源权限项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.GetResourcePermNames(System.String)">
            <summary>
            获取资源权限项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.GetResourceBizPermNames(System.String)">
            <summary>
            资源业务权限名称获取
            </summary>
            <param name="rsid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.CheckPermision(System.String,System.String)">
            <summary>
            检查授权
            </summary>
            <param name="rsid">资源 RSID</param>
            <param name="permName">权限名称</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.CheckPermisions(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查授权
            </summary>
            <param name="rsid">资源 RSID</param>
            <param name="permNames">权限名称</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.CheckPermision(System.String,NetAuthManager.Core.Common.Enums.PermTypeEnum)">
            <summary>
            检查授权
            </summary>
            <param name="rsid">资源 RSID</param>
            <param name="perm">权限类型</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.CheckPermisions(System.String,NetAuthManager.Core.Common.Enums.PermTypeEnum[])">
            <summary>
            检查授权
            </summary>
            <param name="rsid">资源 RSID</param>
            <param name="perms">权限类型</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.GetResourceBizPermisions(System.String)">
            <summary>
            获取资源业务权限
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.GetResourceBizAllowPermNames(System.String)">
            <summary>
            获取资源有权限的业务项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.GetResourceBizAllowPermNames">
            <summary>
            获取当前权限模块有权限的业务项
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuResourceService.GetMethodPermAuthorize">
            <summary>
            权限授权属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.GetMenuType">
            <summary>
            获取菜单
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.AddMenuType(NetAuthManager.Core.Entities.SysMenuType)">
            <summary>
            添加菜单类型
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.DeleteMenuType(NetAuthManager.Application.Sys.Params.Menus.DeleteMenuTypeParam)">
            <summary>
            删除菜单类型
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.GetMenus(NetAuthManager.Application.Params.Menus.GetMenusParam)">
            <summary>
            获取所有菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.GetMenuTreeByRsid(System.String)">
            <summary>
            获取菜单树
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.BuildMenuTree(System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu},System.String)">
            <summary>
            构建菜单树
            </summary>
            <param name="menus"></param>
            <param name="pid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.GetAllMenus(NetAuthManager.Application.Params.Menus.GetMenusParam)">
            <summary>
            获取所有菜单
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.GetAllMenus">
            <summary>
            获取所有菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.SaveMenu(NetAuthManager.Core.Entities.SysMenu)">
            <summary>
            保存菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.DeleteMenu(NetAuthManager.Application.Sys.Params.Menus.DeleteMenuParam)">
            <summary>
            删除菜单
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.GetRouters(NetAuthManager.Application.Params.Menus.GetRoutersParam)">
            <summary>
            获取路由
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.GetConcatMenu(System.Collections.Generic.List{System.String},System.Boolean,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu})">
            <summary>
            查询所有子结构的菜单项
            </summary>
            <param name="ids"></param>
            <param name="containMe"></param>
            <param name="allMenus"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.GetConcatMenuBySIDs(System.Collections.Generic.List{System.String},System.Boolean,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu})">
            <summary>
            查询所有子结构的菜单项
            </summary>
            <param name="sids"></param>
            <param name="containMe"></param>
            <param name="allMenus"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.GetParentMenuBySIDs(System.String,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu})">
            <summary>
            查询所有父结构的菜单项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.GetMenuByFullName(System.String,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu})">
            <summary>
            按照全路径获取菜单项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.GetChildMenuBySID(System.String,System.Boolean)">
            <summary>
            查询子菜单项
            </summary>
            <param name="sid"></param>
            <param name="mustHave"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IMenuService.GetRootMenu">
            <summary>
            查询根菜单项
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.IResourcePermCommonService">
            <summary>
            菜单相关接口
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.GetUserPermSIDs">
            <summary>
            获取用户所有权限相关的 SID，包括用户、部门、角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.GetUserPermSIDs(System.String)">
            <summary>
            获取用户所有权限相关的 SID，包括用户、角色组、角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.GetPermisions(System.String)">
            <summary>
            获取资源操作项列表
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.GetPermisions(System.Collections.Generic.List{System.String})">
            <summary>
            获取资源操作项列表
            </summary>
            <param name="sids"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.GetPermisions(NetAuthManager.EntityFramework.Core.DefaultDbContext,System.Collections.Generic.List{System.String})">
            <summary>
            获取资源操作项列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.GetPermisionAcls(System.Collections.Generic.List{System.String})">
            <summary>
            获取资源操作权限列表
            </summary>
            <param name="sids"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.GetPermisionAcls(NetAuthManager.EntityFramework.Core.DefaultDbContext,System.Collections.Generic.List{System.String})">
            <summary>
            获取资源操作权限列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.GetPermisionAcls(System.String)">
            <summary>
            获取资源操作权限列表
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckPermision(System.String,System.Collections.Generic.IEnumerable{NetAuthManager.Core.Entities.SysResourcePerm},System.Collections.Generic.IEnumerable{NetAuthManager.Core.Entities.SysResourcePermAcl})">
            <summary>
            判断是否有权限
            </summary>
            <param name="permName"></param>
            <param name="perms"></param>
            <param name="acls"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckExecutePermision(System.String)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckExecutePermision(System.String,System.String)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckPermision(System.String,NetAuthManager.Core.Common.Enums.PermTypeEnum)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckPermision(System.String,System.String,NetAuthManager.Core.Common.Enums.PermTypeEnum)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckPermision(System.String,System.String)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="permName"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckPermision(System.String,System.String,System.String)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="account"></param>
            <param name="permName"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckPermision(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="permNames"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckPermision(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="account"></param>
            <param name="permNames"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckPermisionBack(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="permNames"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckPermisionBack(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="account"></param>
            <param name="permNames"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckPermisionBack(System.String,System.Collections.Generic.List{NetAuthManager.Application.Sys.Params.Resources.ResourceBaseParam},System.Boolean)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="userRoles"></param>
            <param name="isAdministrator"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckPermisionBackHashtable(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="permNames"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.CheckPermisionBackHashtable(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="account"></param>
            <param name="permNames"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermCommonService.GetSIDType(System.String)">
            <summary>
            类型转换
            </summary>
            <param name="sidType"></param>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.IResourcePermService">
            <summary>
            菜单相关接口
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermService.GetResources(NetAuthManager.Application.Sys.Params.Resources.GetResourcesParam)">
            <summary>
            获取资源树
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermService.GetResourcePermRoles(System.String)">
            <summary>
            获取资源角色权限信息
            仅角色信息
            </summary>
            <param name="sid"></param>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermService.GetResourceInfo(System.String,System.Nullable{NetAuthManager.Core.Common.Enums.SIDTypeEnum})">
            <summary>
            获取资源信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermService.GetResourcePerms(System.String,System.Nullable{NetAuthManager.Core.Common.Enums.SIDTypeEnum})">
            <summary>
            获取资源操作项列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermService.GetResourcePermTypes">
            <summary>
            获取资源操作项列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermService.GetResourcePermLog">
            <summary>
            获取资源操作项列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermService.SaveResourcePerms(NetAuthManager.Application.Sys.Params.Resources.ResourcePermSaveParam)">
            <summary>
            保存资源操作项列表
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermService.GetResourcePermRoleAcls(NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsGetParam)">
            <summary>
            获取资源角色权限信息
            仅权限
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermService.AddResourcePermRole(NetAuthManager.Application.Sys.Params.Resources.ResourcePermRoleAddParam)">
            <summary>
            添加资源角色
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermService.DeleteResourcePermRole(NetAuthManager.Application.Sys.Params.Resources.ResourcePermRoleDeleteParam)">
            <summary>
            删除资源角色
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IResourcePermService.SaveAcls(NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam)">
            <summary>
            保存资源角色权限列表
            </summary>
            <param name="param"></param>
        </member>
        <member name="T:NetAuthManager.Application.IRoleGroupManageService">
            <summary>
            角色组管理服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.GetRoleGroupPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.GetAllRoleGroupPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.GetRoleGroups">
            <summary>
            获取角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.GetOwerRoleGroupsAsync">
            <summary>
            获取角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.AddRoleGroup(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupAddParam)">
            <summary>
            添加角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.ModifyRoleGroup(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupModifyParam)">
            <summary>
            重命名角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.SetIsOpen(NetAuthManager.Application.Sys.Params.RoleGroups.SetRoleGroupIsOpenParam)">
            <summary>
            设置是否启用
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.DeleteRoleGroup(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam)">
            <summary>
            删除角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.DeleteRoleGroups(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupDeletesParam)">
            <summary>
            删除多个角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.GetRoleGroupMembers(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam)">
            <summary>
            获取角色组成员（即BPM安全组成员）
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.GetRoleGroupRoles(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam)">
            <summary>
            获取角色组-角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.AddRoleGroupMember(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberAddParam)">
            <summary>
            添加角色组成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.AddRoleGroupMembers(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMembersAddParam)">
            <summary>
            添加多个角色组成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.DeleteRoleGroupMember(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberDeleteParam)">
            <summary>
            删除角色组成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.DeleteRoleGroupMembers(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberDeletesParam)">
            <summary>
            删除多个角色组成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupManageService.SaveRoleGroupMembers(NetAuthManager.Application.Sys.Params.RoleGroups.SaveRoleGroupMembersParam)">
            <summary>
            保存角色组成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.IRoleGroupService">
            <summary>
            角色组服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.FromSID(System.String)">
            <summary>
            从 SID 获取角色组，获取不到报错
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.TryGetRoleGroupBySID(System.String)">
            <summary>
            从 SID 获取用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.IsRoleGroupMember(System.String,System.String)">
            <summary>
            是否是指定角色组成员
            是否是组成员，只要是其中一个组成员就行了
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.IsOneRoleGroupMemberUser(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            是否是指定角色组成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.IsRoleGroupSIDMember(System.String,System.String)">
            <summary>
            是否是指定角色组成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.GetRoleGroupSIDsAsync(System.Collections.Generic.List{System.String})">
            <summary>
            获取角色所属的角色组 SID 列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.GetRoleGroupSIDsAsync(NetAuthManager.EntityFramework.Core.DefaultDbContext,System.Collections.Generic.List{System.String})">
            <summary>
            获取角色所属的角色组 SID 列表
            仅考虑开启的角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.GetBelongRoleGroups(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupCheckParam)">
            <summary>
            获取所属角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.GetBelongRoleGroups(System.String)">
            <summary>
            获取用户所属角色组
            </summary>
            <param name="roleCode"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.GetOwerRoleGroupsByUser(System.String)">
            <summary>
            获取用户所属角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.GetOwerRoleGroupsByUserAsync(System.String)">
            <summary>
            获取用户所属角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.GetBelongRoleGroupRolesByUserAsync(System.String)">
            <summary>
            获取用户所属角色组下属角色
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.GetBelongRoleGroupRolesByUser(System.String)">
            <summary>
            获取用户所属角色组下属角色
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IRoleGroupService.IsRoleGroupMember(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupCheckIsMemberParam)">
            <summary>
            是否角色组成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.IRoleManageService">
            <summary>
            角色服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.GetRolePageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.GetRoleNoEveryonePageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表，仅启用用户
            公开访问，无需权限
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.GetAllRolePageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.GetRoles">
            <summary>
            获取角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.AddRole(NetAuthManager.Application.Sys.Params.Roles.RoleAddParam)">
            <summary>
            添加角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.ModifyRole(NetAuthManager.Application.Sys.Params.Roles.RoleModifyParam)">
            <summary>
            重命名角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.SetIsOpen(NetAuthManager.Application.Sys.Params.Roles.SetIsOpenParam)">
            <summary>
            设置是否启用
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.DeleteRole(NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam)">
            <summary>
            删除角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.DeleteRoles(NetAuthManager.Application.Sys.Params.Roles.RoleDeletesParam)">
            <summary>
            删除多个角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.GetRoleMembers(NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam)">
            <summary>
            获取角色成员（即BPM安全组成员）
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.AddRoleMember(NetAuthManager.Application.Sys.Params.Roles.RoleMemberAddParam)">
            <summary>
            添加角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.AddRoleMembers(NetAuthManager.Application.Sys.Params.Roles.RoleMembersAddParam)">
            <summary>
            添加多个角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.DeleteRoleMember(NetAuthManager.Application.Sys.Params.Roles.RoleMemberDeleteParam)">
            <summary>
            删除角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.DeleteRoleMembers(NetAuthManager.Application.Sys.Params.Roles.RoleMemberDeletesParam)">
            <summary>
            删除多个角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleManageService.SaveRoleMembers(NetAuthManager.Application.Sys.Params.Roles.SaveRoleMembersParam)">
            <summary>
            保存角色成员
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.IRoleService">
            <summary>
            角色服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.FromSID(System.String)">
            <summary>
            从 SID 获取角色，获取不到报错
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.TryGetRoleBySID(System.String)">
            <summary>
            从 SID 获取用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.GetRoleUsersAsync(NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam)">
            <summary>
            获取角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.GetRoleUsers(NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam)">
            <summary>
            获取角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.GetRoleUserPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表，角色用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.IsRoleMember(System.String,System.String)">
            <summary>
            是否是指定角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.IsRoleSIDMember(System.String,System.String)">
            <summary>
            是否是指定角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.IsAdministrator(System.String)">
            <summary>
            是否是管理员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.GetRoleSIDsAsync(System.String)">
            <summary>
            获取用户所属的角色 SID 列表
            内部已经支持多线程
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.GetBelongRoles(NetAuthManager.Application.Sys.Params.Roles.RoleCheckParam)">
            <summary>
            获取所属角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.GetBelongRoles(System.String)">
            <summary>
            获取用户所属角色
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.IsRoleMember(NetAuthManager.Application.Sys.Params.Roles.RoleCheckIsMemberParam)">
            <summary>
            是否角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.IsAdministrator(NetAuthManager.Application.Sys.Params.Roles.RoleCheckParam)">
            <summary>
            是否是管理员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IRoleService.IsAdministratorLogin">
            <summary>
            是否是管理员登录
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserLoginService.Login(NetAuthManager.Application.Sys.Params.Users.LoginInfoParam)">
            <summary>
            用户登录
            </summary>
            <param name="loginInfo">用户信息</param>
            <returns>访问 token 信息</returns>
        </member>
        <member name="M:NetAuthManager.Application.IUserLoginService.GetToken(NetAuthManager.Application.Sys.Params.Users.GetTokenParam)">
            <summary>
            获取访问 token，无须验证码
            </summary>
            <param name="loginInfo">用户信息</param>
            <returns>访问 token 信息</returns>
        </member>
        <member name="M:NetAuthManager.Application.IUserLoginService.Authenticate(NetAuthManager.Application.Sys.Params.Users.GetTokenParam)">
            <summary>
            用户认证
            </summary>
            <param name="loginInfo">用户信息</param>
        </member>
        <member name="M:NetAuthManager.Application.IUserLoginService.GetLoginUserInfo">
            <summary>
            获取登录用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.IUserManageService">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserManageService.GetAllPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取用户分页列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserManageService.GetPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取用户分页列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserManageService.SyncUsers(System.Collections.Generic.List{NetAuthManager.Application.Sys.Params.UserSyncParam})">
            <summary>
            同步用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserManageService.AddUser(NetAuthManager.Application.Sys.Params.Users.UserAddParam)">
            <summary>
            添加用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserManageService.ModifyUser(NetAuthManager.Application.Sys.Params.Users.UserModifyParam)">
            <summary>
            重命名用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserManageService.ModifyPassword(NetAuthManager.Application.Sys.Params.Users.UserModifyPasswordParam)">
            <summary>
            修改用户密码
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserManageService.SetUserIsOpen(NetAuthManager.Application.Sys.Params.Users.SetUserIsOpenParam)">
            <summary>
            设置用户是否启用
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserManageService.DeleteUser(NetAuthManager.Application.Sys.Params.Users.UserBaseParam)">
            <summary>
            删除用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserManageService.DeleteUsers(NetAuthManager.Application.Sys.Params.Users.UserDeletesParam)">
            <summary>
            删除多个用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserManageService.GetUserRoles(NetAuthManager.Application.Sys.Params.Users.UserBaseParam)">
            <summary>
            获取用户角色
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IUserManageService.SaveUserRoles(NetAuthManager.Application.Sys.Params.Users.SaveUserRolesParam)">
            <summary>
            保存用户角色
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.IUserService">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserService.FromAccount(System.String)">
            <summary>
            获取用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserService.FromAccount(Microsoft.EntityFrameworkCore.DbSet{NetAuthManager.Core.Entities.SysUser},System.String)">
            <summary>
            获取用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserService.FromSID(System.String)">
            <summary>
            获取用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserService.TryGetUserBySID(System.String)">
            <summary>
            尝试获取用户
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.IUserService.GetSID(System.String)">
            <summary>
            获取用户 SID
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.IUserService.GetSID(NetAuthManager.EntityFramework.Core.DefaultDbContext,System.String)">
            <summary>
            获取用户 SID
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.LoginService">
            <summary>
            用户登录服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.LoginService.Login(NetAuthManager.Application.Sys.Params.Users.LoginInfoParam)">
            <summary>
            登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.LoginService.GetToken(NetAuthManager.Application.Sys.Params.Users.GetTokenParam)">
            <summary>
            登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.LoginService.GetUserInfo">
            <summary>
            获取登录用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.LoginService.GetPublicKey">
            <summary>
            获取公钥
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.LoginService.GetCaptcha">
            <summary>
            获取登录验证码
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.Params.Menus.GetMenusParam">
            <summary>
            获取菜单参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.Params.Menus.GetRoutersParam">
            <summary>
            获取菜单参数
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.DictionaryItemService">
            <summary>
            字典项服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryItemService.GetPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表，仅启用用户
            公开访问，无需权限
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryItemService.Add(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemAddParam)">
            <summary>
            添加
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryItemService.Modify(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemModifyParam)">
            <summary>
            修改
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryItemService.Delete(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam)">
            <summary>
            删除
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryItemService.Deletes(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemDeletesParam)">
            <summary>
            删除多个字典项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryItemService.SetIsOpen(NetAuthManager.Application.Sys.Params.Dictionarys.SetDictionaryItemIsOpenParam)">
            <summary>
            设置用户是否启用
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryItemService.Order(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemOrderParam)">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.DictionaryService">
            <summary>
            字典服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryService.GetList(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            字典列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryService.GetItem(System.String,System.String)">
            <summary>
            获取字典项
            </summary>
            <param name="typeCode">字典编码</param>
            <param name="itemCode">字典项值</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryService.Join(System.String)">
            <summary>
            字典关联
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryService.Join(System.String,System.String)">
            <summary>
            字典关联
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.DictionaryTypeService">
            <summary>
            字典服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryTypeService.GetPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表，仅启用用户
            公开访问，无需权限
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryTypeService.Add(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeAddParam)">
            <summary>
            添加
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryTypeService.Modify(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeModifyParam)">
            <summary>
            修改
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryTypeService.Delete(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam)">
            <summary>
            删除
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryTypeService.Deletes(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeDeletesParam)">
            <summary>
            删除多个字典项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.DictionaryTypeService.SetIsOpen(NetAuthManager.Application.Sys.Params.Dictionarys.SetDictionaryTypeIsOpenParam)">
            <summary>
            设置用户是否启用
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.MenuResourceService">
            <summary>
            用户资源服务
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.MenuResourceService.MenuRootRsid">
            <summary>
            业务划分在权限模块中的根节点RSID
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.GetFullPath(System.String)">
            <summary>
            获得业务类型全路径
            不包含根目录，即，不包含 BizMoudleRootRsid 对应的节点
            </summary>
            <param name="rsid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.GetRSID(System.String)">
            <summary>
            从全路径转为 RSID
            </summary>
            <param name="fullPath">资源全路径</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.GetResourcePerms(System.String)">
            <summary>
            获取资源权限项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.GetResourcePermNames(System.String)">
            <summary>
            获取资源权限项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.GetResourceBizPermNames(System.String)">
            <summary>
            资源业务权限名称获取
            </summary>
            <param name="rsid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.CheckPermision(System.String,System.String)">
            <summary>
            检查授权
            </summary>
            <param name="rsid">资源 RSID</param>
            <param name="permName">权限名称</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.CheckPermisions(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查授权
            </summary>
            <param name="rsid">资源 RSID</param>
            <param name="permNames">权限名称</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.CheckPermision(System.String,NetAuthManager.Core.Common.Enums.PermTypeEnum)">
            <summary>
            检查授权
            </summary>
            <param name="rsid">资源 RSID</param>
            <param name="perm">权限类型</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.CheckPermisions(System.String,NetAuthManager.Core.Common.Enums.PermTypeEnum[])">
            <summary>
            检查授权
            </summary>
            <param name="rsid">资源 RSID</param>
            <param name="perms">权限类型</param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.GetResourceBizPermisions(System.String)">
            <summary>
            获取资源业务权限
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.GetResourceBizAllowPermNames(System.String)">
            <summary>
            获取资源有权限的业务项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.GetResourceBizAllowPermNames">
            <summary>
            获取当前权限模块有权限的业务项
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuResourceService.GetMethodPermAuthorize">
            <summary>
            权限授权属性
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.MenuService">
            <summary>
            菜单服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetMenuType">
            <summary>
            获取菜单类型
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.AddMenuType(NetAuthManager.Core.Entities.SysMenuType)">
            <summary>
            添加菜单类型
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.DeleteMenuType(NetAuthManager.Application.Sys.Params.Menus.DeleteMenuTypeParam)">
            <summary>
            删除菜单类型
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetMenus(NetAuthManager.Application.Params.Menus.GetMenusParam)">
            <summary>
            获取菜单
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetMenuTreeByRsid(System.String)">
            <summary>
            获取菜单树
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.BuildMenuTree(System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu},System.String)">
            <summary>
            构建菜单树
            </summary>
            <param name="menus"></param>
            <param name="pid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetAllMenus(NetAuthManager.Application.Params.Menus.GetMenusParam)">
            <summary>
            获取所有菜单
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetAllMenus">
            <summary>
            获取所有菜单
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.SaveMenu(NetAuthManager.Core.Entities.SysMenu)">
            <summary>
            保存菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.DeleteMenu(NetAuthManager.Application.Sys.Params.Menus.DeleteMenuParam)">
            <summary>
            删除菜单
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetRouters(NetAuthManager.Application.Params.Menus.GetRoutersParam)">
            <summary>
            获取路由
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.BuildRouter(System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu},System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePerm},System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePermAcl},System.Collections.Generic.List{NetAuthManager.Application.Sys.Params.Resources.ResourceBaseParam},System.Boolean)">
            <summary>
            返回空数组则表示子菜单没有权限
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetConcatMenu(System.Collections.Generic.List{System.String},System.Boolean,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu})">
            <summary>
            查询所有子结构的菜单项
            </summary>
            <param name="ids"></param>
            <param name="containMe"></param>
            <param name="allMenus"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetConcatMenuBySIDs(System.Collections.Generic.List{System.String},System.Boolean,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu})">
            <summary>
            查询所有子结构的菜单项
            </summary>
            <param name="sids"></param>
            <param name="containMe"></param>
            <param name="allMenus"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetParentMenuBySIDs(System.String,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu})">
            <summary>
            查询所有父结构的菜单项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.BuildParentMenu(NetAuthManager.Core.Entities.SysMenu,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu})">
            <summary>
            查询所有父结构的菜单项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetMenuByFullName(System.String,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu})">
            <summary>
            按照全路径获取菜单项
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetUserResource(System.Collections.Queue,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu},System.String)">
            <summary>
            从名称队列到资源队列的转换
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetChildMenuBySID(System.String,System.Boolean)">
            <summary>
            查询子菜单项
            </summary>
            <param name="sid"></param>
            <param name="mustHave"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.MenuService.GetRootMenu">
            <summary>
            查询根菜单项
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.ResourcePermCommonService">
            <summary>
            资源权限服务，PermType == "Module"
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.GetUserPermSIDs">
            <summary>
            获取用户所有权限相关的 SID，包括用户、部门、角色
            内部访问数据库有多线程处理，不会报错
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.GetUserPermSIDs(System.String)">
            <summary>
            获取用户所有权限相关的 SID，包括用户、角色组、角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.GetPermisions(System.String)">
            <summary>
            获取资源操作项列表
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.GetPermisions(System.Collections.Generic.List{System.String})">
            <summary>
            获取资源操作项列表
            </summary>
            <param name="sids"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.GetPermisions(NetAuthManager.EntityFramework.Core.DefaultDbContext,System.Collections.Generic.List{System.String})">
            <summary>
            获取资源操作项列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.GetPermisionAcls(System.Collections.Generic.List{System.String})">
            <summary>
            获取资源操作权限列表
            </summary>
            <param name="sids"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.GetPermisionAcls(NetAuthManager.EntityFramework.Core.DefaultDbContext,System.Collections.Generic.List{System.String})">
            <summary>
            获取资源操作权限列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.GetPermisionAcls(Microsoft.EntityFrameworkCore.DbSet{NetAuthManager.Core.Entities.SysResourcePermAcl},System.Collections.Generic.List{System.String})">
            <summary>
            获取资源操作权限列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.GetPermisionAcls(System.String)">
            <summary>
            获取资源操作权限列表
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckPermision(System.String,System.Collections.Generic.IEnumerable{NetAuthManager.Core.Entities.SysResourcePerm},System.Collections.Generic.IEnumerable{NetAuthManager.Core.Entities.SysResourcePermAcl})">
            <summary>
            判断是否有权限
            </summary>
            <param name="permName"></param>
            <param name="perms"></param>
            <param name="acls"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckPermisionBack(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="permNames"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckPermisionBack(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="account"></param>
            <param name="permNames"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckExecutePermision(System.String)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckExecutePermision(System.String,System.String)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckPermision(System.String,NetAuthManager.Core.Common.Enums.PermTypeEnum)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckPermision(System.String,System.String,NetAuthManager.Core.Common.Enums.PermTypeEnum)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckPermision(System.String,System.String)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="permName"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckPermision(System.String,System.String,System.String)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="account"></param>
            <param name="permName"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckPermision(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="permNames"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckPermision(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="account"></param>
            <param name="permNames"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckPermisionBackHashtable(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="permNames"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckPermisionBackHashtable(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="account"></param>
            <param name="permNames"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.CheckPermisionBack(System.String,System.Collections.Generic.List{NetAuthManager.Application.Sys.Params.Resources.ResourceBaseParam},System.Boolean)">
            <summary>
            检查资源对应的操作是否有权限
            </summary>
            <param name="sid"></param>
            <param name="userRoles"></param>
            <param name="isAdministrator"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermCommonService.GetSIDType(System.String)">
            <summary>
            类型转换
            </summary>
            <param name="sidType"></param>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.ResourcePermService">
            <summary>
            资源权限服务，PermType == "Module"
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetResources(NetAuthManager.Application.Sys.Params.Resources.GetResourcesParam)">
            <summary>
            获取资源树
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetResourceInfo(System.String,System.Nullable{NetAuthManager.Core.Common.Enums.SIDTypeEnum})">
            <summary>
            获取资源信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetResourcePerms(System.String,System.Nullable{NetAuthManager.Core.Common.Enums.SIDTypeEnum})">
            <summary>
            获取资源操作项列表
            </summary>
            <param name="sid"></param>
            <param name="sidType"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetResourcePermTypes">
            <summary>
            获取资源操作项列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetResourcePermLog">
            <summary>
            获取资源操作项列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetResourcePermRoles(System.String)">
            <summary>
            获取资源角色权限信息
            仅角色信息，这里的角色是广义的角色
            </summary>
            <param name="sid"></param>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.SaveResourcePerms(NetAuthManager.Application.Sys.Params.Resources.ResourcePermSaveParam)">
            <summary>
            保存资源操作项列表
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetResourcePermRoleAcls(NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsGetParam)">
            <summary>
            获取指定资源的指定角色的权限信息
            仅权限
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.AddResourcePermRole(NetAuthManager.Application.Sys.Params.Resources.ResourcePermRoleAddParam)">
            <summary>
            添加资源角色
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.DeleteResourcePermRole(NetAuthManager.Application.Sys.Params.Resources.ResourcePermRoleDeleteParam)">
            <summary>
            删除资源角色，因为从上级继承是不可以删除的，所以删除当前说明上级没有继承下来
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.SaveAcls(NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam)">
            <summary>
            保存资源角色权限列表
            当前级别的优先级高于父级继承来的
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetResourcePermsInner(System.String,System.Nullable{NetAuthManager.Core.Common.Enums.SIDTypeEnum})">
            <summary>
            获取资源操作列表，附带管理员
            </summary>
            <param name="sid"></param>
            <param name="sidType"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetResourcePermAcls">
            <summary>
            获取资源操作权限列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetResourcePerms">
            <summary>
            获取资源角色列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetMenuRootResurceNode(System.Collections.Generic.List{NetAuthManager.Application.Sys.Results.Resources.ResurceNodeItem})">
            <summary>
            获取菜单资源根节点
            </summary>
            <param name="treeMenuResource"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetRootResurceNode(System.Collections.Generic.List{NetAuthManager.Application.Sys.Results.Resources.ResurceNodeItem})">
            <summary>
            获取资源根节点
            </summary>
            <param name="treeMenuResource"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetResourcePermsRoles(NetAuthManager.Core.Entities.SysResourcePerm,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePermAcl})">
            <summary>
            获取资源权限角色信息
            操作权限项+对应角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.DeleteChildMenuRoleAcl(System.String,System.String,System.String,NetAuthManager.Core.Entities.SysResourcePermAcl,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePermAcl},System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePermAcl},System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePermAcl},NetAuthManager.Application.Sys.Results.Users.LoginUserInfoDto,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu},System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePermAcl},NetAuthManager.Core.Entities.SysMenu)">
            <summary>
            删除或更新子菜单的权限
            </summary>
            <param name="sid"></param>
            <param name="roleSid"></param>
            <param name="roleSidType"></param>
            <param name="currentAcl">当前菜单对应角色权限</param>
            <param name="aclInserts"></param>
            <param name="aclDeletes"></param>
            <param name="aclUpdates"></param>
            <param name="loginUser"></param>
            <param name="allMenus"></param>
            <param name="allAcls"></param>
            <param name="cmenu"></param>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.BuildChildMenuAcl(System.String,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePermAcl},System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePermAcl},System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePermAcl},System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePermAcl},NetAuthManager.Application.Sys.Results.Users.LoginUserInfoDto,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu},System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePerm},System.Collections.Generic.List{NetAuthManager.Core.Entities.SysResourcePermAcl})">
            <summary>
            构建子菜单权限
            当前级别的优先级高于父级继承来的
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.AclFormatToInherited(NetAuthManager.Core.Entities.SysResourcePermAcl,NetAuthManager.Core.Entities.SysResourcePermAcl)">
            <summary>
            继承结果合并到继承中
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.AclFormatNewInherited(NetAuthManager.Core.Entities.SysResourcePermAcl,NetAuthManager.Core.Entities.SysResourcePermAcl)">
            <summary>
            继承结果合并为一条新的继承
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.CopyTo(NetAuthManager.Core.Entities.SysResourcePermAcl)">
            <summary>
            复制，用于往子资源复制时使用
            </summary>
            <param name="acl"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.AclClearNoInherited(NetAuthManager.Core.Entities.SysResourcePermAcl,NetAuthManager.Core.Entities.SysResourcePermAcl)">
            <summary>
            从非继承中排除继承的
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetMemberDisplayName(System.String,System.String)">
            <summary>
            返回 SID 对应的成员名称
            </summary>
            <param name="sid"></param>
            <param name="sidType"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.ResourcePermService.GetParentMenus(NetAuthManager.Core.Entities.SysMenu,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysMenu},System.Collections.Generic.List{NetAuthManager.Application.Sys.Results.Resources.ResourceItemDto},System.Boolean)">
            <summary>
            查询父结构的菜单资源项
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.RoleGroupManageService">
            <summary>
            角色组服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.GetRoleGroupPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表，仅启用用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.GetAllRoleGroupPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.AddRoleGroup(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupAddParam)">
            <summary>
            添加角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.ModifyRoleGroup(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupModifyParam)">
            <summary>
            重命名角色组
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.SetIsOpen(NetAuthManager.Application.Sys.Params.RoleGroups.SetRoleGroupIsOpenParam)">
            <summary>
            设置是否启用
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.GetRoleGroups">
            <summary>
            获取所有角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.GetOwerRoleGroupsAsync">
            <summary>
            获取所有角色组
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.DeleteRoleGroup(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam)">
            <summary>
            删除角色组
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.DeleteRoleGroups(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupDeletesParam)">
            <summary>
            删除多个角色组
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.GetRoleGroupMembers(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam)">
            <summary>
            获取角色组成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.GetRoleGroupRoles(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam)">
            <summary>
            获取角色组-角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.AddRoleGroupMember(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberAddParam)">
            <summary>
            添加一个角色组成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.AddRoleGroupMembers(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMembersAddParam)">
            <summary>
            添加多个角色组成员
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.DeleteRoleGroupMember(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberDeleteParam)">
            <summary>
            删除角色组成员
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.DeleteRoleGroupMembers(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberDeletesParam)">
            <summary>
            删除多个角色组成员
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.SaveRoleGroupMembers(NetAuthManager.Application.Sys.Params.RoleGroups.SaveRoleGroupMembersParam)">
            <summary>
            保存角色组成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.GetMemberDisplayName(NetAuthManager.Core.Entities.SysRoleGroupMember)">
            <summary>
            获取成员显示名
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupManageService.GetSIDType(System.String)">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.RoleGroupService">
            <summary>
            角色组服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.GetRoleGroupSIDsAsync(System.Collections.Generic.List{System.String})">
            <summary>
            获取角色所属的角色组 SID 列表
            仅考虑开启的角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.GetRoleGroupSIDsAsync(NetAuthManager.EntityFramework.Core.DefaultDbContext,System.Collections.Generic.List{System.String})">
            <summary>
            获取角色所属的角色组 SID 列表
            仅考虑开启的角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.GetRoleGroupSIDsAsync(Microsoft.EntityFrameworkCore.DbSet{NetAuthManager.Core.Entities.SysRoleGroup},Microsoft.EntityFrameworkCore.DbSet{NetAuthManager.Core.Entities.SysRoleGroupMember},System.Collections.Generic.List{System.String})">
            <summary>
            获取角色所属的角色组 SID 列表
            仅考虑开启的角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.FromSID(System.String)">
            <summary>
            从 SID 获取用户，获取不到报错
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.TryGetRoleGroupBySID(System.String)">
            <summary>
            从 SID 获取用户，获取不到报错
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.IsRoleGroupMember(System.String,System.String)">
            <summary>
            是否是指定角色组成员
            </summary>
            <param name="roleCode"></param>
            <param name="groupCode"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.IsOneRoleGroupMemberUser(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            是否是指定角色组成员
            是否是组成员，只要是其中一个组成员就行了
            </summary>
            <param name="account"></param>
            <param name="groupCodes"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.IsRoleGroupSIDMember(System.String,System.String)">
            <summary>
            是否是指定角色组成员
            </summary>
            <param name="roleCode"></param>
            <param name="groupSID"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.IsRoleMemberInner(System.String,System.String)">
            <summary>
            是否是指定角色组成员
            目前支持账号、部门、角色组嵌套
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.GetBelongRoleGroups(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupCheckParam)">
            <summary>
            获取用户所属角色组
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.GetBelongRoleGroups(System.String)">
            <summary>
            获取用户所属角色组
            </summary>
            <param name="roleCode"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.GetBelongRoleGroupsByUser(System.String)">
            <summary>
            获取用户所属角色组
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.GetOwerRoleGroupsByUser(System.String)">
            <summary>
            获取用户所属角色组
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.GetOwerRoleGroupsByUserAsync(System.String)">
            <summary>
            获取用户所属角色组
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.GetOwerRoleGroupsByUserInner(System.String)">
            <summary>
            获取用户所属角色组
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.GetBelongRoleGroupRolesByUserAsync(System.String)">
            <summary>
            获取用户所属角色组下属角色
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.GetBelongRoleGroupRolesByUser(System.String)">
            <summary>
            获取用户所属角色组下属角色
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleGroupService.IsRoleGroupMember(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupCheckIsMemberParam)">
            <summary>
            是否是角色组成员
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.RoleManageService">
            <summary>
            角色服务
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.RoleManageService.SystemRoleCodes">
            <summary>
            系统角色编码列表
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.RoleManageService.SystemRoleNames">
            <summary>
            系统角色名称列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.GetRolePageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表，仅启用用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.GetRoleNoEveryonePageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表，仅启用用户
            公开访问，无需权限
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.GetAllRolePageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.GetRoles">
            <summary>
            获取所有角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.AddRole(NetAuthManager.Application.Sys.Params.Roles.RoleAddParam)">
            <summary>
            添加角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.ModifyRole(NetAuthManager.Application.Sys.Params.Roles.RoleModifyParam)">
            <summary>
            重命名角色
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.SetIsOpen(NetAuthManager.Application.Sys.Params.Roles.SetIsOpenParam)">
            <summary>
            设置是否启用
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.DeleteRole(NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam)">
            <summary>
            删除角色
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.DeleteRoles(NetAuthManager.Application.Sys.Params.Roles.RoleDeletesParam)">
            <summary>
            删除多个角色
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.GetRoleMembers(NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam)">
            <summary>
            获取角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.AddRoleMember(NetAuthManager.Application.Sys.Params.Roles.RoleMemberAddParam)">
            <summary>
            添加一个角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.AddRoleMembers(NetAuthManager.Application.Sys.Params.Roles.RoleMembersAddParam)">
            <summary>
            添加多个角色成员
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.DeleteRoleMember(NetAuthManager.Application.Sys.Params.Roles.RoleMemberDeleteParam)">
            <summary>
            删除角色成员
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.DeleteRoleMembers(NetAuthManager.Application.Sys.Params.Roles.RoleMemberDeletesParam)">
            <summary>
            删除多个角色成员
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.SaveRoleMembers(NetAuthManager.Application.Sys.Params.Roles.SaveRoleMembersParam)">
            <summary>
            保存角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.GetMemberDisplayName(NetAuthManager.Core.Entities.SysRoleMember)">
            <summary>
            获取成员显示名
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleManageService.GetSIDType(System.String)">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.RoleService">
            <summary>
            角色服务
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.RoleService.SystemRoleCodes">
            <summary>
            系统角色编码列表
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.RoleService.SystemRoleSIDs">
            <summary>
            系统角色SID列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.FromSID(System.String)">
            <summary>
            从 SID 获取用户，获取不到报错
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.TryGetRoleBySID(System.String)">
            <summary>
            从 SID 获取用户，获取不到报错
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.GetRoleUsersAsync(NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam)">
            <summary>
            获取角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.GetRoleUsers(NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam)">
            <summary>
            获取角色成员
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.GetRoleUserPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表，角色用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.IsRoleMember(System.String,System.String)">
            <summary>
            是否是指定角色成员
            </summary>
            <param name="account"></param>
            <param name="roleCode"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.IsRoleSIDMember(System.String,System.String)">
            <summary>
            是否是指定角色成员
            </summary>
            <param name="account"></param>
            <param name="roleSID"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.IsAdministrator(System.String)">
            <summary>
            是否是管理员
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.GetRoleSIDsAsync(System.String)">
            <summary>
            获取用户所属的角色 SID 列表
            仅启用的角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.IsRoleMemberInner(System.String,System.String,System.Int32)">
            <summary>
            是否是指定角色成员
            目前支持账号、部门、角色嵌套
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.IsRoleMemberInner(Microsoft.EntityFrameworkCore.DbSet{NetAuthManager.Core.Entities.SysUser},System.String,System.String,System.Collections.Generic.List{NetAuthManager.Core.Entities.SysRoleMember},System.Collections.Generic.List{NetAuthManager.Core.Entities.SysRoleMember},System.Collections.Generic.List{NetAuthManager.Core.Entities.SysRole},System.Int32)">
            <summary>
            是否是指定角色成员
            目前支持账号、部门、角色嵌套
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.GetBelongRoles(NetAuthManager.Application.Sys.Params.Roles.RoleCheckParam)">
            <summary>
            获取用户所属角色
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.GetBelongRoles(System.String)">
            <summary>
            获取用户所属角色
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.IsRoleMember(NetAuthManager.Application.Sys.Params.Roles.RoleCheckIsMemberParam)">
            <summary>
            是否是角色成员
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.IsAdministrator(NetAuthManager.Application.Sys.Params.Roles.RoleCheckParam)">
            <summary>
            是否是管理员
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.RoleService.IsAdministratorLogin">
            <summary>
            是否是管理员登录
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserLoginService.Login(NetAuthManager.Application.Sys.Params.Users.LoginInfoParam)">
            <summary>
            用户登录
            </summary>
            <param name="loginInfo">用户信息</param>
            <returns>访问 token 信息</returns>
        </member>
        <member name="M:NetAuthManager.Application.UserLoginService.GetToken(NetAuthManager.Application.Sys.Params.Users.GetTokenParam)">
            <summary>
            获取验证码
            </summary>
            <param name="loginInfo">用户信息</param>
            <returns>访问 token 信息</returns>
        </member>
        <member name="M:NetAuthManager.Application.UserLoginService.Authenticate(NetAuthManager.Application.Sys.Params.Users.GetTokenParam)">
            <summary>
            用户认证
            </summary>
            <param name="loginInfo">用户信息</param>
        </member>
        <member name="M:NetAuthManager.Application.UserLoginService.Authenticate(NetAuthManager.Application.Sys.Params.Users.GetTokenParam,NetAuthManager.Core.Entities.SysUser)">
            <summary>
            用户认证
            </summary>
            <param name="loginInfo">用户信息</param>
            <param name="user">用户实体信息</param>
        </member>
        <member name="M:NetAuthManager.Application.UserLoginService.GetLoginUserInfo">
            <summary>
            获取登录用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetAuthManager.Application.UserManageService">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserManageService.GetAllPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserManageService.GetPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取分页列表，仅启用用户
            公开访问，无需权限
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserManageService.AddUser(NetAuthManager.Application.Sys.Params.Users.UserAddParam)">
            <summary>
            添加用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserManageService.ModifyUser(NetAuthManager.Application.Sys.Params.Users.UserModifyParam)">
            <summary>
            重命名用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserManageService.ModifyPassword(NetAuthManager.Application.Sys.Params.Users.UserModifyPasswordParam)">
            <summary>
            修改用户密码
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserManageService.SetUserIsOpen(NetAuthManager.Application.Sys.Params.Users.SetUserIsOpenParam)">
            <summary>
            设置用户是否启用
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserManageService.DeleteUser(NetAuthManager.Application.Sys.Params.Users.UserBaseParam)">
            <summary>
            删除用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserManageService.DeleteUsers(NetAuthManager.Application.Sys.Params.Users.UserDeletesParam)">
            <summary>
            删除多个用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserManageService.GetUserRoles(NetAuthManager.Application.Sys.Params.Users.UserBaseParam)">
            <summary>
            获取用户角色
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.UserManageService.SaveUserRoles(NetAuthManager.Application.Sys.Params.Users.SaveUserRolesParam)">
            <summary>
            保存用户角色
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserManageService.SyncUsers(System.Collections.Generic.List{NetAuthManager.Application.Sys.Params.UserSyncParam})">
            <summary>
            同步用户
            仅新增、更新，并不删除
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.UserService">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserService.FromAccount(System.String)">
            <summary>
            获取用户
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.UserService.FromAccount(Microsoft.EntityFrameworkCore.DbSet{NetAuthManager.Core.Entities.SysUser},System.String)">
            <summary>
            获取用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserService.FromSID(System.String)">
            <summary>
            从 SID 获取用户，获取不到报错
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.UserService.TryGetUserBySID(System.String)">
            <summary>
            尝试获取用户
            </summary>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.UserService.GetSID(System.String)">
            <summary>
            获取用户 SID
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserService.GetSID(NetAuthManager.EntityFramework.Core.DefaultDbContext,System.String)">
            <summary>
            获取用户 SID
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserService.GetUserInner(System.String,System.Boolean)">
            <summary>
            获取用户
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.UserService.GetUserInner(Microsoft.EntityFrameworkCore.DbSet{NetAuthManager.Core.Entities.SysUser},System.String,System.Boolean)">
            <summary>
            获取用户
            </summary>
        </member>
        <member name="T:NetAuthManager.Application.SystemAppService">
            <summary>
            系统服务接口
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetDescription">
            <summary>
            获取系统描述
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.Check">
            <summary>
            用于访问 Swagger 文档，检测登陆接口有效性 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.Login(Furion.SpecificationDocument.SpecificationAuth)">
            <summary>
            用于访问 Swagger 文档，登陆接口 
            </summary>
            <param name="auth"></param>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetMenuType">
            <summary>
            获取菜单类型
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.AddMenuType(NetAuthManager.Core.Entities.SysMenuType)">
            <summary>
            添加菜单类型
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteMenuType(NetAuthManager.Application.Sys.Params.Menus.DeleteMenuTypeParam)">
            <summary>
            删除菜单类型
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetMenus(NetAuthManager.Application.Params.Menus.GetMenusParam)">
            <summary>
            获取菜单
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.SaveMenu(NetAuthManager.Core.Entities.SysMenu)">
            <summary>
            保存菜单
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteMenu(NetAuthManager.Application.Sys.Params.Menus.DeleteMenuParam)">
            <summary>
            删除菜单
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetRouters(NetAuthManager.Application.Params.Menus.GetRoutersParam)">
            <summary>
            获取路由
            </summary>
        </member>
        <member name="F:NetAuthManager.Application.SystemAppService.RoleResurceFullPath">
            <summary>
            角色权限全路径
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetRolePageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取角色列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetRoleNoEveryonePageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取角色列表，不包含Everyone
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetAllRolePageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取所有角色列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetRoles">
            <summary>
            获取角色列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.AddRole(NetAuthManager.Application.Sys.Params.Roles.RoleAddParam)">
            <summary>
            添加角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.EditRole(NetAuthManager.Application.Sys.Params.Roles.RoleModifyParam)">
            <summary>
            修改角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteRole(NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam)">
            <summary>
            删除角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteRoles(NetAuthManager.Application.Sys.Params.Roles.RoleDeletesParam)">
            <summary>
            删除多个角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.SetIsOpen(NetAuthManager.Application.Sys.Params.Roles.SetIsOpenParam)">
            <summary>
            设置是否启用
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetRoleMembers(NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam)">
            <summary>
            获取角色成员列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetRoleUsers(NetAuthManager.Application.Sys.Params.Roles.RoleBaseParam)">
            <summary>
            获取角色用户列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetRoleUserPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取角色用户分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.AddRoleMember(NetAuthManager.Application.Sys.Params.Roles.RoleMemberAddParam)">
            <summary>
            添加角色成员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.AddRoleMembers(NetAuthManager.Application.Sys.Params.Roles.RoleMembersAddParam)">
            <summary>
            添加多个角色成员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteRoleMember(NetAuthManager.Application.Sys.Params.Roles.RoleMemberDeleteParam)">
            <summary>
            删除角色成员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteRoleMembers(NetAuthManager.Application.Sys.Params.Roles.RoleMemberDeletesParam)">
            <summary>
            删除多个角色成员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.SaveRoleMembers(NetAuthManager.Application.Sys.Params.Roles.SaveRoleMembersParam)">
            <summary>
            保存角色成员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetBelongRoles(NetAuthManager.Application.Sys.Params.Roles.RoleCheckParam)">
            <summary>
            获取所属角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.IsRoleMember(NetAuthManager.Application.Sys.Params.Roles.RoleCheckIsMemberParam)">
            <summary>
            是否是角色成员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.IsAdministrator(NetAuthManager.Application.Sys.Params.Roles.RoleCheckParam)">
            <summary>
            是否是管理员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.IsAdministratorLogin">
            <summary>
            是否是管理员登录
            </summary>
            <returns></returns>
        </member>
        <member name="F:NetAuthManager.Application.SystemAppService.RoleGroupResurceFullPath">
            <summary>
            角色组权限全路径
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetRoleGroupPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取角色组列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetAllRoleGroupPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取所有角色列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetRoleGroups">
            <summary>
            获取角色组列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetOwerRoleGroups">
            <summary>
            获取所属角色组列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.AddRoleGroup(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupAddParam)">
            <summary>
            添加角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.EditRoleGroup(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupModifyParam)">
            <summary>
            修改角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteRoleGroup(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam)">
            <summary>
            删除角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteRoleGroups(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupDeletesParam)">
            <summary>
            删除多个角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.SetRoleGroupIsOpen(NetAuthManager.Application.Sys.Params.RoleGroups.SetRoleGroupIsOpenParam)">
            <summary>
            设置是否启用
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetRoleGroupMembers(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam)">
            <summary>
            获取角色组成员列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetRoleGroupRoles(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupBaseParam)">
            <summary>
            获取角色组成员列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.AddRoleGroupMember(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberAddParam)">
            <summary>
            添加角色成员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.AddRoleGroupMembers(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMembersAddParam)">
            <summary>
            添加多个角色成员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteRoleGroupMember(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberDeleteParam)">
            <summary>
            删除角色成员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteRoleGroupMembers(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupMemberDeletesParam)">
            <summary>
            删除多个角色成员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.SaveRoleGroupMembers(NetAuthManager.Application.Sys.Params.RoleGroups.SaveRoleGroupMembersParam)">
            <summary>
            保存角色组成员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetBelongRoleGroups(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupCheckParam)">
            <summary>
            获取所属角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.IsRoleGroupMember(NetAuthManager.Application.Sys.Params.RoleGroups.RoleGroupCheckIsMemberParam)">
            <summary>
            是否是角色成员
            </summary>
            <returns></returns>
        </member>
        <member name="F:NetAuthManager.Application.SystemAppService.UserResurceFullPath">
            <summary>
            用户权限全路径
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetAllUserPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取用户列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetUserPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取用户列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.AddUser(NetAuthManager.Application.Sys.Params.Users.UserAddParam)">
            <summary>
            添加用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.EditUser(NetAuthManager.Application.Sys.Params.Users.UserModifyParam)">
            <summary>
            修改用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.ModifyPassword(NetAuthManager.Application.Sys.Params.Users.UserModifyPasswordParam)">
            <summary>
            修改用户密码
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteUser(NetAuthManager.Application.Sys.Params.Users.UserBaseParam)">
            <summary>
            删除用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteUsers(NetAuthManager.Application.Sys.Params.Users.UserDeletesParam)">
            <summary>
            删除多个用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.SetUserIsOpen(NetAuthManager.Application.Sys.Params.Users.SetUserIsOpenParam)">
            <summary>
            设置是否启用
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetUserRoles(NetAuthManager.Application.Sys.Params.Users.UserBaseParam)">
            <summary>
            获取用户角色列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.SaveUserRoles(NetAuthManager.Application.Sys.Params.Users.SaveUserRolesParam)">
            <summary>
            用户分配角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetResources(NetAuthManager.Application.Sys.Params.Resources.GetResourcesParam)">
            <summary>
            获取资源树
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetResourcePerms(NetAuthManager.Application.Sys.Params.Resources.ResourceBaseParam)">
            <summary>
            获取资源权限项列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.SaveResourcePerms(NetAuthManager.Application.Sys.Params.Resources.ResourcePermSaveParam)">
            <summary>
            保存资源权限项列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetResourcePermRoles(NetAuthManager.Application.Sys.Params.Resources.ResourceBaseParam)">
            <summary>
            获取资源权限维护的角色信息：角色、部门、用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetResourcePermRoleAcls(NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsGetParam)">
            <summary>
            获取资源角色权限信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.AddResourcePermRole(NetAuthManager.Application.Sys.Params.Resources.ResourcePermRoleAddParam)">
            <summary>
            添加资源角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteResourcePermRole(NetAuthManager.Application.Sys.Params.Resources.ResourcePermRoleDeleteParam)">
            <summary>
            删除资源角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.SaveAcls(NetAuthManager.Application.Sys.Params.Resources.ResourcePermAclsSaveParam)">
            <summary>
            保存资源权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.CheckExecutePermision(NetAuthManager.Application.Sys.Params.Resources.ResourcePermCheckParam)">
            <summary>
            检查访问权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.CheckPermision(NetAuthManager.Application.Sys.Params.Resources.ResourcePermCheckPermParam)">
            <summary>
            检查操作权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.CheckPermisions(NetAuthManager.Application.Sys.Params.Resources.ResourcePermCheckPermsParam)">
            <summary>
            检查多个操作权限
            </summary>
            <returns></returns>
        </member>
        <member name="F:NetAuthManager.Application.SystemAppService.DictionaryResurceFullPath">
            <summary>
            数据字典权限全路径
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetDictionaryList(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryParam)">
            <summary>
            获取数据字典列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetDictionaryTypePageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取数据字典类型列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.AddDictionaryType(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeAddParam)">
            <summary>
            添加数据字典类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.EditDictionaryType(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeModifyParam)">
            <summary>
            修改数据字典类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteDictionaryType(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeBaseParam)">
            <summary>
            删除数据字典类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteDictionaryTypes(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryTypeDeletesParam)">
            <summary>
            删除多个数据字典类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.SetDictionaryTypeIsOpen(NetAuthManager.Application.Sys.Params.Dictionarys.SetDictionaryTypeIsOpenParam)">
            <summary>
            设置是否启用
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.GetDictionaryItemPageList(NetAuthManager.Core.Params.PageSearchParam)">
            <summary>
            获取数据字典项列表
            </summary>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.AddDictionaryItem(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemAddParam)">
            <summary>
            添加数据字典项
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.EditDictionaryItem(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemModifyParam)">
            <summary>
            修改数据字典项
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteDictionaryItem(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemBaseParam)">
            <summary>
            删除数据字典项
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.DeleteDictionaryItems(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemDeletesParam)">
            <summary>
            删除多个数据字典项
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.SetDictionaryItemIsOpen(NetAuthManager.Application.Sys.Params.Dictionarys.SetDictionaryItemIsOpenParam)">
            <summary>
            设置是否启用
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetAuthManager.Application.SystemAppService.OrderDictionaryItem(NetAuthManager.Application.Sys.Params.Dictionarys.DictionaryItemOrderParam)">
            <summary>
            字典项排序
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
